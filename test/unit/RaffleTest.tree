RaffleTest.t.sol

├── Enter Raffle
├── when msg.value < Entrancefee
│   └── it should revert with custom error "Raffle__NotEnoughETHSent"
├── when raffle state is not OPEN
│   └── it should revert with custom error "Raffle__NotOpen"
└── when msg.value > EntranceFee and raffle state is OPEN
    ├── player should be recorded in s_players[]
    └── it should emit a {EnteredRaffle} event


└── checkupkeep
    └── returns true if below conditions are met
        ├── enough time has passed from the previous raffle draw
        ├── raffle state is OPEN
        ├── raffle has balance
        └── raffle has players
